{"version":3,"file":"index.umd.js","sources":["../src/loop.ts","../src/index.ts"],"sourcesContent":["import { Clock, ClockType } from '@four/clock'\n\nconst finished = Promise.resolve()\n\ntype RequestImmediate = (handler: () => void) => NodeJS.Immediate | number\ntype CancelImmediate = (immediate: NodeJS.Immediate | number) => void\n\nlet requestImmediate: RequestImmediate | undefined\nlet cancelImmediate: CancelImmediate | undefined\n\nif (\n  typeof requestAnimationFrame === 'function' &&\n  typeof cancelAnimationFrame === 'function'\n) {\n  requestImmediate = requestAnimationFrame\n  cancelImmediate = cancelAnimationFrame as CancelImmediate\n} else if (\n  typeof setImmediate === 'function' &&\n  typeof clearImmediate === 'function'\n) {\n  requestImmediate = setImmediate\n  cancelImmediate = clearImmediate as CancelImmediate\n}\n\nexport type LoopType = 'immediate' | 'interval'\n\nexport class Loop {\n  private resolve?: () => void\n  private immediateID?: NodeJS.Immediate | number\n  private intervalID?: NodeJS.Timeout\n  private throttle = Clock.throttle(() => this.interval)\n  public handlers: Set<(clock: Clock) => void> = new Set()\n  public interval: number\n  public fixed: boolean\n  public type: LoopType\n  public running: boolean = false\n  public promise: Promise<void> = finished\n  public readonly handler = () => this.tick()\n  public clock: Clock\n\n  public static async delay(duration: number): Promise<void> {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n\n  public static async repeat(\n    interval: number,\n    handler: (clock: Clock) => boolean | void\n  ): Promise<void> {\n    const loop = new this({ interval, type: 'interval' })\n    const repeat = loop.repeat(handler)\n\n    loop.start()\n    await repeat\n    loop.stop()\n  }\n\n  public constructor(parameters?: {\n    interval?: number\n    fixed?: boolean\n    type?: LoopType\n    clockType?: ClockType\n  })\n  public constructor(parameters?: {\n    interval?: number\n    fixed?: boolean\n    type?: LoopType\n    clock?: Clock\n  })\n  public constructor({\n    interval = 0,\n    fixed = false,\n    type = 'immediate',\n    clockType = undefined,\n    clock = new Clock({ type: clockType })\n  }: {\n    interval?: number\n    fixed?: boolean\n    type?: 'immediate' | 'interval'\n    clockType?: ClockType\n    clock?: Clock\n  } = {}) {\n    this.type = type\n    this.interval = interval\n    this.fixed = fixed\n    this.clock = clock\n    this.clock.interval = (delta: number) => this.fixed\n      ? this.interval\n      : this.throttle(delta)\n  }\n\n  private requestImmediate = (): void => {\n    this.tick()\n    this.immediateID = requestImmediate!(this.requestImmediate)\n  }\n\n  private cancelImmediate(): void {\n    cancelImmediate!(this.immediateID!)\n    this.immediateID = undefined\n  }\n\n  private requestInterval = (): void => {\n    this.tick()\n    this.intervalID = setInterval(this.handler, this.interval || 1)\n  }\n\n  private cancelInterval = (): void => {\n    clearInterval(this.intervalID!)\n    this.intervalID = undefined\n  }\n\n  protected request(): void {\n    this.type === 'immediate' && requestImmediate\n      ? this.requestImmediate()\n      : this.requestInterval()\n  }\n\n  protected cancel(): void {\n    this.type === 'immediate' && cancelImmediate\n      ? this.cancelImmediate()\n      : this.cancelInterval()\n  }\n\n  public async delay(duration: number): Promise<void> {\n    duration += this.clock.elapsed\n    return this.repeat(clock => clock.elapsed <= duration)\n  }\n\n  public async repeat(\n    handler: (clock: Clock) => boolean | void\n  ): Promise<void> {\n    return new Promise((resolve) => {\n      const repeat = (clock: Clock): void => {\n        if (handler(clock) !== false) return\n        this.remove(repeat)\n        resolve()\n      }\n\n      this.add(repeat)\n    })\n  }\n\n  public add(handler: (clock: Clock) => void): this {\n    this.handlers.add(handler)\n    return this\n  }\n\n  public remove(handler: (clock: Clock) => void): this {\n    this.handlers.delete(handler)\n    return this\n  }\n\n  public tick(): this {\n    const clock = this.clock.tick()\n    clock.delta && this.handlers.forEach(handler => handler(clock))\n    return this\n  }\n\n  public start(): this {\n    if (!this.running) {\n      this.running = true\n      this.promise = new Promise((resolve) => { this.resolve = resolve })\n      this.clock.reset()\n      this.request()\n    }\n\n    return this\n  }\n\n  public stop(): this {\n    if (this.running) {\n      this.cancel()\n      this.resolve!()\n      this.running = false\n      this.promise = finished\n    }\n\n    return this\n  }\n\n  public reset(): this {\n    this.clock.reset(true)\n    return this\n  }\n}\n","import { Clock } from '@four/clock'\nimport { Loop, LoopType } from './loop'\n\nexport { Loop, LoopType }\n\nexport function delay(duration: number): Promise<void> {\n  return Loop.delay(duration)\n}\n\nexport function repeat(\n  interval: number,\n  handler: (clock: Clock) => boolean | void\n): Promise<void> {\n  return Loop.repeat(interval, handler)\n}\n"],"names":["requestImmediate","cancelImmediate","finished","Promise","resolve","requestAnimationFrame","cancelAnimationFrame","setImmediate","clearImmediate","_a","_b","_c","interval","_d","fixed","_e","type","_f","clockType","_g","clock","this","Clock","throttle","_this","Set","tick","immediateID","intervalID","setInterval","handler","clearInterval","undefined","delta","Loop","duration","setTimeout","loop","repeat","start","stop","requestInterval","cancelInterval","elapsed","remove","add","handlers","delete","forEach","running","promise","reset","request","cancel","delay"],"mappings":"wjDAEA,IAKIA,EACAC,EANEC,EAAWC,QAAQC,UASU,mBAA1BC,uBACyB,mBAAzBC,sBAEPN,EAAmBK,sBACnBJ,EAAkBK,sBAEM,mBAAjBC,cACmB,mBAAnBC,iBAEPR,EAAmBO,aACnBN,EAAkBO,iCA+ClB,WAAmBC,GAAnB,WAAmBC,kBACjBC,aAAAC,iBACAC,UAAAC,gBACAC,SAAAC,2BACAC,cAAAC,sBACAC,UAAAC,qCA3CMC,cAAWC,QAAMC,SAAS,WAAM,OAAAC,EAAKZ,WACtCS,cAAwC,IAAII,IAI5CJ,cAAmB,EACnBA,aAAyBnB,EAChBmB,aAAU,WAAM,OAAAG,EAAKE,QAqD7BL,sBAAmB,WACzBG,EAAKE,OACLF,EAAKG,YAAc3B,EAAkBwB,EAAKxB,mBAQpCqB,qBAAkB,WACxBG,EAAKE,OACLF,EAAKI,WAAaC,YAAYL,EAAKM,QAASN,EAAKZ,UAAY,IAGvDS,oBAAiB,WACvBU,cAAcP,EAAKI,YACnBJ,EAAKI,gBAAaI,GA1BlBX,KAAKL,KAAOA,EACZK,KAAKT,SAAWA,EAChBS,KAAKP,MAAQA,EACbO,KAAKD,MAAQA,EACbC,KAAKD,MAAMR,SAAW,SAACqB,GAAkB,OAAAT,EAAKV,MAC1CU,EAAKZ,SACLY,EAAKD,SAASU,IAgGtB,OA/IsBC,QAApB,SAA0BC,2FACxB,SAAM,IAAIhC,QAAQ,SAAAC,GAAW,OAAAgC,WAAWhC,EAAS+B,oBAAjD1B,mBAGkByB,SAApB,SACEtB,EACAkB,mGAMA,OAJMO,EAAO,IAAIhB,KAAK,CAAET,WAAUI,KAAM,aAClCsB,EAASD,EAAKC,OAAOR,GAE3BO,EAAKE,WACCD,iBAAN7B,SACA4B,EAAKG,iBA0CCN,4BAAR,WACEjC,EAAiBoB,KAAKM,aACtBN,KAAKM,iBAAcK,GAaXE,oBAAV,WACgB,cAAdb,KAAKL,MAAwBhB,EACzBqB,KAAKrB,mBACLqB,KAAKoB,mBAGDP,mBAAV,WACgB,cAAdb,KAAKL,MAAwBf,EACzBoB,KAAKpB,kBACLoB,KAAKqB,kBAGER,kBAAb,SAAmBC,oEAEjB,OADAA,GAAYd,KAAKD,MAAMuB,WAChBtB,KAAKiB,OAAO,SAAAlB,GAAS,OAAAA,EAAMuB,SAAWR,UAGlCD,mBAAb,SACEJ,+EAEA,SAAO,IAAI3B,QAAQ,SAACC,GAClB,IAAMkC,EAAS,SAAClB,IACS,IAAnBU,EAAQV,KACZI,EAAKoB,OAAON,GACZlC,MAGFoB,EAAKqB,IAAIP,WAINJ,gBAAP,SAAWJ,GAET,OADAT,KAAKyB,SAASD,IAAIf,GACXT,MAGFa,mBAAP,SAAcJ,GAEZ,OADAT,KAAKyB,SAASC,OAAOjB,GACdT,MAGFa,iBAAP,WACE,IAAMd,EAAQC,KAAKD,MAAMM,OAEzB,OADAN,EAAMa,OAASZ,KAAKyB,SAASE,QAAQ,SAAAlB,GAAW,OAAAA,EAAQV,KACjDC,MAGFa,kBAAP,WAAA,WAQE,OAPKb,KAAK4B,UACR5B,KAAK4B,SAAU,EACf5B,KAAK6B,QAAU,IAAI/C,QAAQ,SAACC,GAAcoB,EAAKpB,QAAUA,IACzDiB,KAAKD,MAAM+B,QACX9B,KAAK+B,WAGA/B,MAGFa,iBAAP,WAQE,OAPIb,KAAK4B,UACP5B,KAAKgC,SACLhC,KAAKjB,UACLiB,KAAK4B,SAAU,EACf5B,KAAK6B,QAAUhD,GAGVmB,MAGFa,kBAAP,WAEE,OADAb,KAAKD,MAAM+B,OAAM,GACV9B,qCChLWc,GACpB,OAAOD,EAAKoB,MAAMnB,sBAIlBvB,EACAkB,GAEA,OAAOI,EAAKI,OAAO1B,EAAUkB"}