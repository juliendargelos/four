{"version":3,"file":"index.umd.js","sources":["../src/clock.ts"],"sourcesContent":["type BaseClockType = 'getTime' | 'date' | 'performance'\n\nconst types: BaseClockType[] = ['getTime', 'date', 'performance']\n\nexport type ClockType = BaseClockType | (() => number)\n\nexport class Clock {\n  private _interval?: ((delta: number) => number) | number\n  private getInterval!: () => number\n  public time!: number\n  public delta!: number\n  public elapsed!: number\n  public now!: () => number\n\n  public static readonly getTime = () => new Date().getTime()\n  public static readonly date = Date.now || Clock.getTime\n  public static readonly performance = typeof performance === 'undefined'\n    ? Clock.date\n    : performance.now.bind(performance)\n\n  public static readonly now = Clock.date\n\n  public static throttle(\n    interval: (() => number) | number\n  ): (delta: number) => number {\n    return typeof interval === 'number'\n      ? (delta: number) => delta >= interval ? delta : 0\n      : (delta: number) => delta >= interval() ? delta : 0\n  }\n\n  public constructor({\n    type = 'date',\n    interval = undefined,\n  }: {\n    type?: ClockType\n    interval?: ((delta: number) => number) | number\n  } = {}) {\n    this.type = type\n    this.interval = interval\n    this.reset(true)\n  }\n\n  private getTimeInterval(): number {\n    return this.now() - this.time\n  }\n\n  public get interval(): ((delta: number) => number) | number | undefined {\n    return this._interval\n  }\n\n  public set interval(v: ((delta: number) => number) | number | undefined) {\n    this._interval = v\n\n    switch (typeof v) {\n      case 'number':\n        this.getInterval = () => v\n        break\n\n      case 'function':\n        this.getInterval = () => v(this.getTimeInterval())\n        break\n\n      default:\n        this.getInterval = this.getTimeInterval\n    }\n  }\n\n  public get type(): ClockType {\n    return types.find(type => Clock[type] === this.now) || this.now\n  }\n\n  public set type(type: ClockType) {\n    this.now = typeof type === 'function' ? type : Clock[type]\n  }\n\n  public reset(elapsed: boolean = false): this {\n    this.delta = 0\n    this.time = this.now()\n    if (elapsed) this.elapsed = 0\n    return this\n  }\n\n  public tick(delta: number = this.getInterval()): this {\n    this.delta = delta\n    this.time += delta\n    this.elapsed += delta\n    return this\n  }\n}\n"],"names":["types","_a","_b","_c","type","_d","interval","this","reset","Clock","delta","now","time","Object","_interval","v","getInterval","_this","getTimeInterval","find","elapsed","Date","getTime","performance","date","bind"],"mappings":"2NAEA,IAAMA,EAAyB,CAAC,UAAW,OAAQ,4BA4BjD,WAAmBC,OAAAC,kBACjBC,SAAAC,sBACAC,aAAAC,sBAKAC,KAAKH,KAAOA,EACZG,KAAKD,SAAWA,EAChBC,KAAKC,OAAM,GAiDf,OAlEgBC,WAAd,SACEH,GAEA,MAA2B,iBAAbA,EACV,SAACI,GAAkB,OAAAA,GAASJ,EAAWI,EAAQ,GAC/C,SAACA,GAAkB,OAAAA,GAASJ,IAAaI,EAAQ,IAe/CD,4BAAR,WACE,OAAOF,KAAKI,MAAQJ,KAAKK,MAG3BC,sBAAWJ,4BAAX,WACE,OAAOF,KAAKO,eAGd,SAAoBC,GAApB,WAGE,OAFAR,KAAKO,UAAYC,SAEFA,GACb,IAAK,SACHR,KAAKS,YAAc,WAAM,OAAAD,GACzB,MAEF,IAAK,WACHR,KAAKS,YAAc,WAAM,OAAAD,EAAEE,EAAKC,oBAChC,MAEF,QACEX,KAAKS,YAAcT,KAAKW,kDAI9BL,sBAAWJ,wBAAX,WAAA,WACE,OAAOT,EAAMmB,KAAK,SAAAf,GAAQ,OAAAK,EAAML,KAAUa,EAAKN,OAAQJ,KAAKI,SAG9D,SAAgBP,GACdG,KAAKI,IAAsB,mBAATP,EAAsBA,EAAOK,EAAML,oCAGhDK,kBAAP,SAAaW,GAIX,oBAJWA,MACXb,KAAKG,MAAQ,EACbH,KAAKK,KAAOL,KAAKI,MACbS,IAASb,KAAKa,QAAU,GACrBb,MAGFE,iBAAP,SAAYC,GAIV,oBAJUA,EAAgBH,KAAKS,eAC/BT,KAAKG,MAAQA,EACbH,KAAKK,MAAQF,EACbH,KAAKa,SAAWV,EACTH,MAxEcE,UAAU,WAAM,OAAA,IAAIY,MAAOC,WAC3Bb,OAAOY,KAAKV,KAAOF,EAAMa,QACzBb,cAAqC,oBAAhBc,YACxCd,EAAMe,KACND,YAAYZ,IAAIc,KAAKF,aAEFd,MAAMA,EAAMe"}